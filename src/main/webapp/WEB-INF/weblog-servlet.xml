<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

  <!-- Activates various annotations to be detected in bean classes -->
  <context:annotation-config />

  <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
   For example @Controller and @Service. Make sure to set the correct base-package-->
  <context:component-scan base-package="slina.mb.controller" />

  <!-- Configures the annotation-driven Spring MVC Controller programming model.
  Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
  <mvc:annotation-driven />



  <!-- ================ Boilerplate Spring beans ================

Read localized strings for JSPs from page*.properties.
-->

<bean id="messageSource"  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename" value="classpath:page" />
    <property name="fallbackToSystemLocale" value="false" />
</bean>



  <!-- Exception handling. If a controller throws an exception, this bean logs it as an error, and send the "fail" view back to the browser. -->
  <bean id="simpleMappingExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="defaultErrorView" value="fail" />
    <property name="warnLogCategory"  value="ERROR" />
  </bean>


  <!-- Check controller classes for @RequestMapping annotations, to find out
       what URLs they control.  Set the user's locale from "lang" query
       parameters sent to those URLs.
 -->
    <mvc:interceptors>
                <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
                  <property name="paramName" value="lang" />
              </bean>
    </mvc:interceptors>

	    <!-- one of the properties available; the maximum file size in bytes 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

	    <property name="maxUploadSize" value="5242880"/>
	</bean>
-->

  <!-- Retrieve the user's locale from the session if no "lang" query
       parameter is given explicitly. -->
  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

  <!-- This view resolver handles special-purpose views. The view name is taken to be a bean name. -->
  <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>


  <!-- This default view resolver handles all other views, and renders   view "vn" using page /WEB-INF/jsp/vn.jsp . -->
  <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    <property name="prefix" value="/WEB-INF/jsp/"/>
    <property name="suffix" value=".jsp"/>
  </bean>

</beans>